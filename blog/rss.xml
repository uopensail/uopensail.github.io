<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>RecGo Blog</title>
        <link>https://docs.uopensail.com/blog</link>
        <description>RecGo Blog</description>
        <lastBuildDate>Fri, 21 Mar 2025 13:33:17 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[Application of DeepFM Model in AppS]]></title>
            <link>https://docs.uopensail.com/blog/AppS/DeepFM</link>
            <guid>https://docs.uopensail.com/blog/AppS/DeepFM</guid>
            <pubDate>Fri, 21 Mar 2025 13:33:17 GMT</pubDate>
            <description><![CDATA[In the field of recommendation systems, efficiently combining low-order and high-order feature interactions to improve prediction accuracy has always been a key challenge. The DeepFM model offers a solution that combines memory capacity and generalization ability by integrating Factorization Machines (FM) with Deep Neural Networks (DNN). This article will introduce the application and effectiveness of DeepFM in the AppS business.]]></description>
            <content:encoded><![CDATA[<p>In the field of recommendation systems, efficiently combining low-order and high-order feature interactions to improve prediction accuracy has always been a key challenge. The DeepFM model offers a solution that combines memory capacity and generalization ability by integrating Factorization Machines (FM) with Deep Neural Networks (DNN). This article will introduce the application and effectiveness of DeepFM in the AppS business.</p>
<img decoding="async" loading="lazy" src="https://docs.uopensail.com/blog/static/images/deepfm.svg" title="" alt="" width="522" data-align="center" class="img_ev3q">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://docs.uopensail.com/blog/AppS/DeepFM#introduction" class="hash-link" aria-label="Introduction的直接链接" title="Introduction的直接链接">​</a></h2>
<p>DeepFM (Deep Factorization Machine) is a recommendation system model that combines factorization machines (FM) with deep learning. It aims to capture both low-order and high-order feature interactions simultaneously. The architecture of DeepFM consists of two components: the FM component and the Deep component. The FM component is used to capture low-order feature interactions, while the Deep component learns high-order feature interactions through a multi-layer perceptron (MLP).</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="fm-module">FM Module<a href="https://docs.uopensail.com/blog/AppS/DeepFM#fm-module" class="hash-link" aria-label="FM Module的直接链接" title="FM Module的直接链接">​</a></h3>
<ul>
<li><strong>Function</strong>: The FM module focuses on capturing second-order interactions between features. It leverages feature embeddings to compute interaction terms and efficiently represent relationships between sparse features.</li>
<li><strong>Advantage</strong>: By modeling low-order interactions, the FM module effectively handles sparse data, making it particularly suitable for scenarios with a large number of sparse features.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dnn-module">DNN Module<a href="https://docs.uopensail.com/blog/AppS/DeepFM#dnn-module" class="hash-link" aria-label="DNN Module的直接链接" title="DNN Module的直接链接">​</a></h3>
<ul>
<li><strong>Function</strong>: The DNN module is used to learn high-order feature combinations. Through a multi-layer neural network, DNN can capture complex nonlinear feature interactions.</li>
<li><strong>Customization Capability</strong>: Users can design the network structure of the DNN according to specific needs, including the number of layers, the number of neurons in each layer, activation functions, and regularization strategies.</li>
<li><strong>Advantage</strong>: With a flexible structure design, the DNN module can generalize to new feature combinations and improve the model's adaptability to different data distributions.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="benefits-of-deepfm-over-fm">Benefits of DeepFM over FM<a href="https://docs.uopensail.com/blog/AppS/DeepFM#benefits-of-deepfm-over-fm" class="hash-link" aria-label="Benefits of DeepFM over FM的直接链接" title="Benefits of DeepFM over FM的直接链接">​</a></h3>
<ol>
<li>
<p><strong>Comprehensive Feature Interaction Capability</strong>: Traditional FM models mainly focus on second-order interactions between features, whereas DeepFM can effectively capture high-order feature interactions by introducing a deep learning component, thus improving recommendation accuracy.</p>
</li>
<li>
<p><strong>No Need for Manual Feature Engineering</strong>: DeepFM can automatically learn feature interactions, reducing the reliance on manual feature engineering, which is particularly useful for handling complex, large-scale datasets.</p>
</li>
<li>
<p><strong>Shared Feature Embeddings</strong>: The feature embedding layer in DeepFM is shared between the FM and Deep components, making the model more efficient in capturing feature interactions while reducing the number of model parameters.</p>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="advantages-of-deepfm">Advantages of DeepFM<a href="https://docs.uopensail.com/blog/AppS/DeepFM#advantages-of-deepfm" class="hash-link" aria-label="Advantages of DeepFM的直接链接" title="Advantages of DeepFM的直接链接">​</a></h3>
<ul>
<li><strong>Comprehensive Capability</strong>: DeepFM combines the strengths of FM and DNN, allowing it to learn both low-order and high-order feature interactions without the need for feature engineering.</li>
<li><strong>Model Simplicity</strong>: Compared to training FM and DNN separately and then combining them, DeepFM maintains model compactness and efficiency by sharing the feature embedding layer.</li>
<li><strong>Wide Applicability</strong>: Due to its flexibility and strong expressive power, DeepFM is widely used in fields such as ad click-through rate prediction and recommendation systems.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-code-for-developing-deepfm-with-pytorch">Example Code for Developing DeepFM with PyTorch<a href="https://docs.uopensail.com/blog/AppS/DeepFM#example-code-for-developing-deepfm-with-pytorch" class="hash-link" aria-label="Example Code for Developing DeepFM with PyTorch的直接链接" title="Example Code for Developing DeepFM with PyTorch的直接链接">​</a></h3>
<p>In the following example, we will develop the FM and DNN modules separately and then combine them into a complete DeepFM model.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> torch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nn </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> nn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">functional </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> F</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">DeepFM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Module</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> field_dims</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> embed_dim</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mlp_dims</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DeepFM</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">embeddings </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ModuleList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Embedding</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dim</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> embed_dim</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> dim </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> field_dims</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">linear </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Linear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">field_dims</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fm </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> FM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">embed_dim</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dnn </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DNN</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">field_dims</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> embed_dim</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mlp_dims</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">forward</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        x_emb </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">emb</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> emb </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">enumerate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">embeddings</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        x_emb </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x_emb</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dim</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        x_linear </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">linear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        x_fm </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fm</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x_emb</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        x_dnn </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dnn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x_emb</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">view</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x_emb</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> x_linear </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> x_fm </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> x_dnn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">FM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Module</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> embed_dim</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">FM</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">embed_dim </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> embed_dim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">forward</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        square_of_sum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dim</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">**</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sum_of_square </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">**</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dim</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">square_of_sum </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> sum_of_square</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dim</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> keepdim</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">DNN</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Module</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> input_dim</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dims</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DNN</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        layers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> dim </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> dims</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            layers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Linear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">input_dim</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dim</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            layers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ReLU</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            input_dim </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> dim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">layers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Sequential</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">layers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">forward</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">layers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Example usage:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">field_dims </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Example field dimensions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">embed_dim </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mlp_dims </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">64</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">32</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DeepFM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">field_dims</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> embed_dim</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mlp_dims</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Dummy input</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">x </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">randint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">field_dims</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Batch size 4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">output </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">output</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="application">Application<a href="https://docs.uopensail.com/blog/AppS/DeepFM#application" class="hash-link" aria-label="Application的直接链接" title="Application的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-feature-embedding-configuration">1. Feature Embedding Configuration<a href="https://docs.uopensail.com/blog/AppS/DeepFM#1-feature-embedding-configuration" class="hash-link" aria-label="1. Feature Embedding Configuration的直接链接" title="1. Feature Embedding Configuration的直接链接">​</a></h3>
<p>In our DeepFM model, the embedding dimension for each feature is set to 10. This configuration effectively captures low-order feature interactions and provides a solid foundation for subsequent high-order feature learning through the deep neural network.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-model-training-and-optimization">2. Model Training and Optimization<a href="https://docs.uopensail.com/blog/AppS/DeepFM#2-model-training-and-optimization" class="hash-link" aria-label="2. Model Training and Optimization的直接链接" title="2. Model Training and Optimization的直接链接">​</a></h3>
<p>Building on our experience with FM model training, the DeepFM model excels in combining memory and generalization. The FM component captures low-order feature interactions, while the DNN component learns high-order feature combinations. This combination achieves excellent results in the current business scenario.</p>
<ul>
<li>
<p>Memory Capability: DeepFM uses the FM component's low-order interactions to capture known, stable feature combinations.</p>
</li>
<li>
<p>Generalization Capability: Through the DNN component, DeepFM can discover new, potential high-order feature combinations, enhancing the prediction of user behavior.</p>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-ab-testing-results">3. AB Testing Results<a href="https://docs.uopensail.com/blog/AppS/DeepFM#3-ab-testing-results" class="hash-link" aria-label="3. AB Testing Results的直接链接" title="3. AB Testing Results的直接链接">​</a></h3>
<p>In the "Guess You Like" module, deploying the DeepFM model led to a <strong>4.66%</strong> increase in average distribution per user. This result indicates that DeepFM significantly enhances the quality of personalized recommendations for users.</p>
<img decoding="async" loading="lazy" src="https://docs.uopensail.com/blog/static/images/DeepFM-AB.png" title="" alt="" width="522" data-align="center" class="img_ev3q">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="further-reading">Further Reading<a href="https://docs.uopensail.com/blog/AppS/DeepFM#further-reading" class="hash-link" aria-label="Further Reading的直接链接" title="Further Reading的直接链接">​</a></h2>
<ul>
<li>
<p><a href="https://arxiv.org/abs/1703.04247" target="_blank" rel="noopener noreferrer">A Factorization-Machine based Neural Network for CTR Prediction - arXiv</a></p>
</li>
<li>
<p><a href="https://d2l.ai/chapter_recommender-systems/deepfm.html" target="_blank" rel="noopener noreferrer">Deep Factorization Machines — Dive into Deep Learning</a></p>
</li>
<li>
<p><a href="https://medium.com/data-science-in-your-pocket/deepfm-for-recommendation-systems-explained-with-codes-c200063990f7" target="_blank" rel="noopener noreferrer">DeepFM for recommendation systems explained with codes</a></p>
</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Application of the ESMM Model in AppS]]></title>
            <link>https://docs.uopensail.com/blog/AppS/ESMM</link>
            <guid>https://docs.uopensail.com/blog/AppS/ESMM</guid>
            <pubDate>Fri, 21 Mar 2025 13:33:17 GMT</pubDate>
            <description><![CDATA[In modern recommendation systems, particularly within the AppS business environment, predicting user behaviors such as Click-Through Rate (CTR) and Conversion Rate (CVR) is crucial for enhancing user satisfaction and driving business growth. The ESMM model, with its unique architecture and efficient multi-task learning capability, offers an outstanding solution for the AppS business.]]></description>
            <content:encoded><![CDATA[<p>In modern recommendation systems, particularly within the AppS business environment, predicting user behaviors such as Click-Through Rate (CTR) and Conversion Rate (CVR) is crucial for enhancing user satisfaction and driving business growth. The ESMM model, with its unique architecture and efficient multi-task learning capability, offers an outstanding solution for the AppS business.</p>
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/ESMM-origin.webp" alt="" width="522" data-align="center" class="img_ev3q">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://docs.uopensail.com/blog/AppS/ESMM#introduction" class="hash-link" aria-label="Introduction的直接链接" title="Introduction的直接链接">​</a></h2>
<p>ESMM, short for Entire Space Multi-task Model, is a multi-task learning model specifically designed to tackle problems related to ad recommendations and user behavior prediction. The core idea of ESMM is to enhance the overall performance of the model by simultaneously learning multiple related tasks. This approach not only shares potential information between different tasks but also effectively alleviates the issue of data sparsity.</p>
<p>The ESMM model is typically applied to predict CTR and CVR. Traditional methods often train two separate models to predict CTR and CVR, whereas ESMM simultaneously performs these two prediction tasks within a unified framework, thereby capturing the correlation between them more effectively.</p>
<p>To learn more about the foundational concepts of ESMM, you can read this&nbsp;<a href="https://arxiv.org/abs/1804.07931" target="_blank" rel="noopener noreferrer">academic paper on ESMM</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="major-advantages-of-esmm">Major Advantages of ESMM<a href="https://docs.uopensail.com/blog/AppS/ESMM#major-advantages-of-esmm" class="hash-link" aria-label="Major Advantages of ESMM的直接链接" title="Major Advantages of ESMM的直接链接">​</a></h3>
<ul>
<li><strong>Data Efficiency</strong>: By sharing the feature space, ESMM can better utilize data, especially in sparse data scenarios.</li>
<li><strong>Performance Enhancement</strong>: By jointly learning multiple tasks, ESMM can better capture the mutual influences between related tasks, improving the accuracy of predictions.</li>
<li><strong>Simplified Architecture</strong>: Compared to training multiple models independently, ESMM provides a more streamlined and efficient solution.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="differences-between-esmm-and-mmoe">Differences Between ESMM and MMOE<a href="https://docs.uopensail.com/blog/AppS/ESMM#differences-between-esmm-and-mmoe" class="hash-link" aria-label="Differences Between ESMM and MMOE的直接链接" title="Differences Between ESMM and MMOE的直接链接">​</a></h3>
<p>In multi-task learning, besides ESMM, there is another popular model known as MMOE (Multi-gate Mixture-of-Experts). Both MMOE and ESMM aim to enhance the performance of multiple tasks by sharing information, but they exhibit significant differences in architecture and application scenarios:</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="architectural-differences">Architectural Differences<a href="https://docs.uopensail.com/blog/AppS/ESMM#architectural-differences" class="hash-link" aria-label="Architectural Differences的直接链接" title="Architectural Differences的直接链接">​</a></h4>
<ul>
<li>
<p><strong>ESMM</strong>: ESMM conducts multi-task learning by sharing the entire feature space. It primarily uses a unified network structure to simultaneously predict multiple tasks (such as CTR and CVR) and enhances overall performance by sharing underlying features.</p>
</li>
<li>
<p><strong>MMOE</strong>: MMOE employs a more complex structure by introducing multiple expert networks and gating mechanisms to dynamically select suitable features and model paths for each task. Each task has its own gating network to select the most relevant information from multiple experts.</p>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="application-scenarios">Application Scenarios<a href="https://docs.uopensail.com/blog/AppS/ESMM#application-scenarios" class="hash-link" aria-label="Application Scenarios的直接链接" title="Application Scenarios的直接链接">​</a></h4>
<ul>
<li>
<p><strong>ESMM</strong>: Suitable for scenarios where tasks are highly related and require extensive information sharing, particularly when data is sparse and efficient information utilization is needed.</p>
</li>
<li>
<p><strong>MMOE</strong>: More flexible and applicable to scenarios where task correlations are weaker or personalized feature selection is required. Due to its complex selection mechanism, MMOE performs better in situations with conflicting task requirements.</p>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="performance-aspects">Performance Aspects<a href="https://docs.uopensail.com/blog/AppS/ESMM#performance-aspects" class="hash-link" aria-label="Performance Aspects的直接链接" title="Performance Aspects的直接链接">​</a></h4>
<ul>
<li>
<p><strong>ESMM</strong>: Provides stable performance improvements between related tasks through its simplified network architecture and efficient feature sharing.</p>
</li>
<li>
<p><strong>MMOE</strong>: Capable of offering higher prediction accuracy in complex task environments through flexible expert selection mechanisms, especially when task requirements are diverse.</p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="application">Application<a href="https://docs.uopensail.com/blog/AppS/ESMM#application" class="hash-link" aria-label="Application的直接链接" title="Application的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="similarity-in-basic-structure-between-esmm-and-mmoe">Similarity in Basic Structure Between ESMM and MMOE<a href="https://docs.uopensail.com/blog/AppS/ESMM#similarity-in-basic-structure-between-esmm-and-mmoe" class="hash-link" aria-label="Similarity in Basic Structure Between ESMM and MMOE的直接链接" title="Similarity in Basic Structure Between ESMM and MMOE的直接链接">​</a></h3>
<p>The ESMM model shares many structural similarities with the traditional MMOE model. Both employ a multi-task learning framework to enhance the performance of different tasks by sharing information. However, the ESMM model adopts a different approach in the final conversion rate prediction: it calculates the predicted Conversion Rate (pCVR) as the product of two towers, a design aimed at fully capturing the interaction between CTR and CVR.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="key-components-of-the-esmm-model">Key Components of the ESMM Model<a href="https://docs.uopensail.com/blog/AppS/ESMM#key-components-of-the-esmm-model" class="hash-link" aria-label="Key Components of the ESMM Model的直接链接" title="Key Components of the ESMM Model的直接链接">​</a></h3>
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/ESMM.webp" alt="" width="522" data-align="center" class="img_ev3q">
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="two-expert-networks">Two Expert Networks<a href="https://docs.uopensail.com/blog/AppS/ESMM#two-expert-networks" class="hash-link" aria-label="Two Expert Networks的直接链接" title="Two Expert Networks的直接链接">​</a></h4>
<p>When applied to the AppS business, ESMM uses two expert networks. These expert networks are responsible for handling features related to CTR and CVR tasks, respectively. Through specialized network structures, ESMM can better extract and utilize task-specific information, thereby enhancing prediction accuracy.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="two-gating-mechanisms">Two Gating Mechanisms<a href="https://docs.uopensail.com/blog/AppS/ESMM#two-gating-mechanisms" class="hash-link" aria-label="Two Gating Mechanisms的直接链接" title="Two Gating Mechanisms的直接链接">​</a></h4>
<p>In addition to expert networks, ESMM also employs two gating mechanisms to control the CTR and CVR tasks separately. These gating mechanisms dynamically adjust the selection and utilization of features for each task, ensuring that each task receives the most suitable information flow. Through optimization of gating mechanisms, ESMM provides more precise results in complex user behavior predictions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="experimental-results-and-effects">Experimental Results and Effects<a href="https://docs.uopensail.com/blog/AppS/ESMM#experimental-results-and-effects" class="hash-link" aria-label="Experimental Results and Effects的直接链接" title="Experimental Results and Effects的直接链接">​</a></h2>
<p>In practical applications within the AppS business, the ESMM model has demonstrated significant results through A/B testing. In the "Guess You Like" module, the ESMM model successfully achieved a 6.45% increase in average distribution per user.</p>
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/ESMM-AB.png" alt="" width="522" data-align="center" class="img_ev3q">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="further-reading">Further Reading<a href="https://docs.uopensail.com/blog/AppS/ESMM#further-reading" class="hash-link" aria-label="Further Reading的直接链接" title="Further Reading的直接链接">​</a></h2>
<ul>
<li>
<p><a href="https://arxiv.org/abs/1804.07931" target="_blank" rel="noopener noreferrer">Entire Space Multi-Task Model: An Effective Approach for Estimating ... - arXiv</a></p>
</li>
<li>
<p><a href="https://easyrec.readthedocs.io/en/latest/models/esmm.html" target="_blank" rel="noopener noreferrer">ESMM — easy_rec 0.8.5 documentation</a></p>
</li>
<li>
<p><a href="https://github.com/dai08srhg/ESMM" target="_blank" rel="noopener noreferrer">GitHub - dai08srhg/ESMM: PyTorch implementation of Entire Space Multitask Model (ESMM)</a></p>
</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Application of Factorization Machines (FM) Model in Application Store (AppS)]]></title>
            <link>https://docs.uopensail.com/blog/AppS/FM</link>
            <guid>https://docs.uopensail.com/blog/AppS/FM</guid>
            <pubDate>Fri, 21 Mar 2025 13:33:17 GMT</pubDate>
            <description><![CDATA[Introduction]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://docs.uopensail.com/blog/AppS/FM#introduction" class="hash-link" aria-label="Introduction的直接链接" title="Introduction的直接链接">​</a></h2>
<p>Factorization Machines (FM) are powerful machine learning models, especially widely used in recommendation systems and advertising click-through rate prediction. FM models can effectively capture the cross information between features and are highly efficient and easy to implement in engineering.</p>
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/FM.jpg" alt="" width="522" data-align="center" class="img_ev3q">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-advantages-of-fm-over-linear-regression-lr">1. Advantages of FM over Linear Regression (LR)<a href="https://docs.uopensail.com/blog/AppS/FM#1-advantages-of-fm-over-linear-regression-lr" class="hash-link" aria-label="1. Advantages of FM over Linear Regression (LR)的直接链接" title="1. Advantages of FM over Linear Regression (LR)的直接链接">​</a></h3>
<p>Linear Regression (LR) is a simple and intuitive model, but it cannot capture the cross and nonlinear relationships between features. The FM model introduces latent vectors to factorize features, effectively capturing second-order interactions between features. Compared to LR, FM has the following advantages:</p>
<ul>
<li><strong>Feature Interaction</strong>: FM can automatically learn interactions between features without manually constructing cross-features, leading to better performance on complex datasets.</li>
<li><strong>Model Flexibility</strong>: FM performs well in highly sparse datasets and is suitable for scenarios with a large number of categorical features.</li>
<li><strong>Strong Generalization</strong>: By factorizing features, FM can avoid overfitting, especially when the data is high-dimensional but with a small sample size.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-time-complexity-analysis-of-fm">2. Time Complexity Analysis of FM<a href="https://docs.uopensail.com/blog/AppS/FM#2-time-complexity-analysis-of-fm" class="hash-link" aria-label="2. Time Complexity Analysis of FM的直接链接" title="2. Time Complexity Analysis of FM的直接链接">​</a></h3>
<p>A significant advantage of the FM model is its efficient computational capability. Although FM considers interactions between all pairs of features, its time complexity remains&nbsp;($O(N)$)&nbsp;rather than&nbsp;($O(N​^2​​)$). This is because FM simplifies the calculation of feature interactions through factorization as follows:</p>
<p>$\hat{y}(x) = w_0 + \sum_{i=1}^{N}w_ix_i + \sum_{i=1}^{N}\sum_{j=i+1}^{N} \langle v_i, v_j \rangle x_ix_j$</p>
<p>where&nbsp;(⟨v​i​​,v​j​​⟩)&nbsp;denotes the inner product of two feature latent vectors, significantly reducing computational cost. The steps are as follows:</p>
<ul>
<li><strong>Linear Term</strong>:&nbsp;($\sum_{i=1}^{N}w_ix_i$), with a time complexity of&nbsp;($O(N)$).</li>
<li><strong>Interaction Term</strong>: Through factorization,&nbsp;($\sum_{i=1}^{N}\sum_{j=i+1}^{N} \langle v_i, v_j \rangle x_ix_j$)&nbsp;can be computed in&nbsp;($O(N)$)&nbsp;time.</li>
</ul>
<p>This efficiency allows FM to maintain fast computation speeds even when handling large-scale datasets.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-ease-of-engineering-implementation">3. Ease of Engineering Implementation<a href="https://docs.uopensail.com/blog/AppS/FM#3-ease-of-engineering-implementation" class="hash-link" aria-label="3. Ease of Engineering Implementation的直接链接" title="3. Ease of Engineering Implementation的直接链接">​</a></h3>
<p>The FM model not only has theoretical advantages but is also relatively simple to implement in practice, especially when developed and deployed using deep learning frameworks like PyTorch. Below is a brief explanation and example code of implementing FM using PyTorch:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="developing-and-training-fm-model-with-pytorch">Developing and Training FM Model with PyTorch<a href="https://docs.uopensail.com/blog/AppS/FM#developing-and-training-fm-model-with-pytorch" class="hash-link" aria-label="Developing and Training FM Model with PyTorch的直接链接" title="Developing and Training FM Model with PyTorch的直接链接">​</a></h3>
<p>Developing an FM model with PyTorch is very straightforward, as PyTorch's flexibility and ease of use make customizing model structures and training processes simple. Here is a simplified implementation example of an FM model:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> torch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nn </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> nn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">optim </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> optim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">FactorizationMachine</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Module</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n_features</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">FactorizationMachine</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">linear </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Linear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n_features</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">v </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Parameter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">randn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n_features</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">forward</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        linear_part </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">linear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        interaction_part </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">pow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">mm</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">mm</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">pow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">pow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dim</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> keepdim</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> linear_part </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> interaction_part</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Example usage</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">n_features </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Assuming 10 features</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">k </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Dimension of latent vectors</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> FactorizationMachine</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n_features</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">criterion </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MSELoss</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">optimizer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> optim</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SGD</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">model</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">parameters</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lr</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0.01</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Assuming we have some training data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">X_train </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">randn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n_features</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 100 samples</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">y_train </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">randn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Training process</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">train</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> epoch </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Train for 100 epochs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    optimizer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">zero_grad</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    outputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">X_train</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    loss </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> criterion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">outputs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y_train</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    loss</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">backward</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    optimizer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">step</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">epoch</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f'Epoch [</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">epoch</span><span class="token string-interpolation interpolation operator" style="color:#393A34">+</span><span class="token string-interpolation interpolation number" style="color:#36acaa">1</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">/100], Loss: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">loss</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">item</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">.4f</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">'</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Through the above code example, it is evident that implementing the FM model with PyTorch is intuitive and flexible. Users can easily adjust model structures, optimizers, and loss functions to quickly adapt to different business needs.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="application">Application<a href="https://docs.uopensail.com/blog/AppS/FM#application" class="hash-link" aria-label="Application的直接链接" title="Application的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-feature-embedding-configuration">1. Feature Embedding Configuration<a href="https://docs.uopensail.com/blog/AppS/FM#1-feature-embedding-configuration" class="hash-link" aria-label="1. Feature Embedding Configuration的直接链接" title="1. Feature Embedding Configuration的直接链接">​</a></h3>
<p>In our FM model, the embedding dimension for each feature is set to 10. This configuration allows us to fully capture the interactions between features without adding excessive computational overhead. Choosing the right embedding dimension is a critical step in balancing model complexity and computational efficiency.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-addressing-sample-imbalance-issues">2. Addressing Sample Imbalance Issues<a href="https://docs.uopensail.com/blog/AppS/FM#2-addressing-sample-imbalance-issues" class="hash-link" aria-label="2. Addressing Sample Imbalance Issues的直接链接" title="2. Addressing Sample Imbalance Issues的直接链接">​</a></h3>
<p>During the model training process, we found a significant imbalance in the ratio of positive to negative samples, primarily due to the substantial differences in homepage exposure click data. To address this issue, we conducted two experiments:</p>
<ul>
<li>
<p><strong>Random Negative Sample Dropping</strong>: This straightforward method aims to balance the sample ratio by reducing the number of negative samples. However, our experiments showed that while this approach can somewhat alleviate the imbalance issue, it does not significantly improve model performance.</p>
</li>
<li>
<p><strong>Positive Sample Weighting</strong>: In contrast, we applied weighting to positive samples, giving them higher learning importance. This method better emphasizes genuine user interest behaviors. By adjusting sample weights, we effectively increased the model's focus on positive samples, leading to a significant improvement in overall model performance.</p>
</li>
</ul>
<p>The experiments demonstrated that positive sample weighting outperforms random negative sample dropping. This is mainly because weighting allows us to more accurately capture user interest preferences, avoiding model bias caused by an excess of negative samples.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-data-issues-and-model-optimization">3. Data Issues and Model Optimization<a href="https://docs.uopensail.com/blog/AppS/FM#3-data-issues-and-model-optimization" class="hash-link" aria-label="3. Data Issues and Model Optimization的直接链接" title="3. Data Issues and Model Optimization的直接链接">​</a></h3>
<p>During the initial model training, we encountered a critical issue: training with the full dataset did not achieve the expected results. Upon thorough investigation, we discovered that many homepage exposures used frontend caching due to network issues. These cached data were not user-initiated actions, thus interfering with the model's learning process.</p>
<p>To resolve this issue, we differentiated the reported data on the first screen, removing the cached data. This approach ensured that the model was trained using genuine user behavior data, ultimately ensuring the effectiveness of the model once deployed.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-ab-testing-results">4. AB Testing Results<a href="https://docs.uopensail.com/blog/AppS/FM#4-ab-testing-results" class="hash-link" aria-label="4. AB Testing Results的直接链接" title="4. AB Testing Results的直接链接">​</a></h3>
<p>The effect of online weighting was verified through AB testing. Specific AB test screenshots will be presented here, further proving the effectiveness of our optimization strategies in practical applications. In the <strong>Guess You Like</strong> section on the homepage, the average distribution per person increased by <strong>14.8%</strong>.</p>
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/FM-AB.webp" alt="" width="522" data-align="center" class="img_ev3q">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="further-reading">Further Reading<a href="https://docs.uopensail.com/blog/AppS/FM#further-reading" class="hash-link" aria-label="Further Reading的直接链接" title="Further Reading的直接链接">​</a></h2>
<ul>
<li>
<p><a href="https://github.com/rixwew/pytorch-fm" target="_blank" rel="noopener noreferrer">Factorization Machine models in PyTorch - GitHub</a></p>
</li>
<li>
<p><a href="https://d2l.ai/chapter_recommender-systems/fm.html" target="_blank" rel="noopener noreferrer">Factorization Machines</a></p>
</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Application of the MMOE Model in AppS]]></title>
            <link>https://docs.uopensail.com/blog/AppS/MMOE</link>
            <guid>https://docs.uopensail.com/blog/AppS/MMOE</guid>
            <pubDate>Fri, 21 Mar 2025 13:33:17 GMT</pubDate>
            <description><![CDATA[In the AppS business, recommendation systems need not only to improve user Click-Through Rate (CTR) but also to enhance Conversion Rate (CVR) to achieve comprehensive user engagement and business growth. The Multi-gate Mixture-of-Experts (MMOE) model offers an efficient solution by simultaneously optimizing multiple objectives to meet these business needs.]]></description>
            <content:encoded><![CDATA[<p>In the AppS business, recommendation systems need not only to improve user Click-Through Rate (CTR) but also to enhance Conversion Rate (CVR) to achieve comprehensive user engagement and business growth. The Multi-gate Mixture-of-Experts (MMOE) model offers an efficient solution by simultaneously optimizing multiple objectives to meet these business needs.</p>
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/MMOE-origin.webp" alt="" data-align="center" width="522" class="img_ev3q">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://docs.uopensail.com/blog/AppS/MMOE#introduction" class="hash-link" aria-label="Introduction的直接链接" title="Introduction的直接链接">​</a></h2>
<p>In the field of recommendation systems and advertising, models often need to optimize multiple objectives simultaneously, such as Click-Through Rate (CTR) and Conversion Rate (CVR). The Multi-gate Mixture-of-Experts (MMOE) model provides an effective solution by achieving better goal synergy optimization within a multi-task learning framework.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-what-is-mmoe">1. What is MMOE?<a href="https://docs.uopensail.com/blog/AppS/MMOE#1-what-is-mmoe" class="hash-link" aria-label="1. What is MMOE?的直接链接" title="1. What is MMOE?的直接链接">​</a></h3>
<p>MMOE (Multi-gate Mixture-of-Experts) is a deep learning architecture for multi-task learning, designed to simultaneously optimize multiple related but distinct objectives. It introduces multiple "expert" networks and "gating" mechanisms to dynamically select and combine different expert outputs to meet the needs of different tasks.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="core-components">Core Components<a href="https://docs.uopensail.com/blog/AppS/MMOE#core-components" class="hash-link" aria-label="Core Components的直接链接" title="Core Components的直接链接">​</a></h4>
<ul>
<li><strong>Expert Networks</strong>: Multiple sub-networks, each responsible for learning different representations of input features to meet the needs of different tasks.</li>
<li><strong>Gating Networks</strong>: For each task, MMOE introduces an independent gating network responsible for selecting the appropriate combination of experts for the input sample. The gating network dynamically allocates weights to each expert based on input features.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="working-principle">Working Principle<a href="https://docs.uopensail.com/blog/AppS/MMOE#working-principle" class="hash-link" aria-label="Working Principle的直接链接" title="Working Principle的直接链接">​</a></h4>
<p>MMOE combines expert networks through the gating mechanism, enabling the model to flexibly select the most suitable feature combinations for each task while sharing basic features. This mechanism allows for the sharing of information between tasks while mitigating negative transfer effects.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-why-use-mmoe">2. Why Use MMOE?<a href="https://docs.uopensail.com/blog/AppS/MMOE#2-why-use-mmoe" class="hash-link" aria-label="2. Why Use MMOE?的直接链接" title="2. Why Use MMOE?的直接链接">​</a></h3>
<p>In business scenarios, especially in advertising and recommendation systems, it is often necessary to optimize multiple key metrics simultaneously. For example, improving Click-Through Rate (CTR) and Conversion Rate (CVR) are common business objectives. Traditional single-task models often struggle to balance these goals, while MMOE offers an ideal solution for multi-objective optimization.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="business-goals-considering-ctr-and-cvr">Business Goals: Considering CTR and CVR<a href="https://docs.uopensail.com/blog/AppS/MMOE#business-goals-considering-ctr-and-cvr" class="hash-link" aria-label="Business Goals: Considering CTR and CVR的直接链接" title="Business Goals: Considering CTR and CVR的直接链接">​</a></h4>
<ul>
<li>
<p><strong>Improving CTR (Click-Through Rate)</strong>: CTR is a metric that measures the ability of advertisements or recommendations to attract user clicks. Increasing CTR can directly enhance user interaction and engagement.</p>
</li>
<li>
<p><strong>Improving CVR (Conversion Rate)</strong>: CVR is a metric that measures the ability of users to complete target behaviors (such as purchases, registrations, etc.). Enhancing CVR can directly impact the business's final revenue.</p>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="why-choose-mmoe">Why Choose MMOE?<a href="https://docs.uopensail.com/blog/AppS/MMOE#why-choose-mmoe" class="hash-link" aria-label="Why Choose MMOE?的直接链接" title="Why Choose MMOE?的直接链接">​</a></h4>
<ul>
<li><strong>Task Synergy Optimization</strong>: MMOE allows for the simultaneous optimization of CTR and CVR objectives by sharing feature representations of expert networks and using independent gating mechanisms.</li>
<li><strong>Reducing Negative Transfer</strong>: Through the combination of experts and gating, MMOE effectively reduces negative transfer effects between tasks, ensuring that optimizing one objective does not significantly harm the other.</li>
<li><strong>Dynamic Adaptability</strong>: The dynamic gating mechanism of MMOE enables the model to adjust expert combinations in real-time based on input features, adapting to different user behavior patterns and preferences.</li>
</ul>
<p>MMOE demonstrates its strong adaptability and optimization performance in multi-task learning. For scenarios that require simultaneous consideration of multiple business goals, such as optimizing ad CTR and CVR, MMOE provides an efficient and flexible solution. By designing expert and gating structures wisely, MMOE can achieve more refined recommendation and advertising strategies in complex business environments.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="application">Application<a href="https://docs.uopensail.com/blog/AppS/MMOE#application" class="hash-link" aria-label="Application的直接链接" title="Application的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="model-architecture-and-strategy">Model Architecture and Strategy<a href="https://docs.uopensail.com/blog/AppS/MMOE#model-architecture-and-strategy" class="hash-link" aria-label="Model Architecture and Strategy的直接链接" title="Model Architecture and Strategy的直接链接">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-retaining-fm-cross-strategy">1. Retaining FM Cross Strategy<a href="https://docs.uopensail.com/blog/AppS/MMOE#1-retaining-fm-cross-strategy" class="hash-link" aria-label="1. Retaining FM Cross Strategy的直接链接" title="1. Retaining FM Cross Strategy的直接链接">​</a></h4>
<p>In the MMOE architecture, we continue to retain the original Factorization Machine (FM) cross strategy. This strategy excels in modeling low-order feature interactions, effectively capturing the basic relationship between users and content. We integrate FM's output into the final output of MMOE to ensure full utilization of basic feature interaction information.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-expert-network-design">2. Expert Network Design<a href="https://docs.uopensail.com/blog/AppS/MMOE#2-expert-network-design" class="hash-link" aria-label="2. Expert Network Design的直接链接" title="2. Expert Network Design的直接链接">​</a></h4>
<p>The MMOE model employs two expert networks, each focusing on learning different feature combinations. Through diversified expert network design, the model can capture user behavior patterns from different perspectives and enhance adaptability to complex data.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="3-gating-mechanism">3. Gating Mechanism<a href="https://docs.uopensail.com/blog/AppS/MMOE#3-gating-mechanism" class="hash-link" aria-label="3. Gating Mechanism的直接链接" title="3. Gating Mechanism的直接链接">​</a></h4>
<p>We designed two independent gating networks responsible for optimizing CTR and CVR, respectively:</p>
<ul>
<li><strong>CTR Gating</strong>: Controls the expert combination related to click-through rate features, ensuring that recommended content can attract user clicks.</li>
<li><strong>CVR Gating</strong>: Optimizes the feature combination related to download conversion, increasing the probability of users downloading applications.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="4-training-strategy">4. Training Strategy<a href="https://docs.uopensail.com/blog/AppS/MMOE#4-training-strategy" class="hash-link" aria-label="4. Training Strategy的直接链接" title="4. Training Strategy的直接链接">​</a></h4>
<p>During model training, we use click and download behaviors as task labels and design a fixed-weight loss function:</p>
<ul>
<li><strong>Loss Weight Allocation</strong>:
<ul>
<li>The loss weight for PCTR is set to 0.95, emphasizing the optimization of click behavior.</li>
<li>The loss weight for PCTCVR is set to 0.05, ensuring that download behavior receives appropriate attention.</li>
</ul>
</li>
</ul>
<p>This weight allocation ensures that CTR is the primary optimization direction while also considering the CVR objective.</p>
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/mmoe.webp" alt="" data-align="center" width="445" class="img_ev3q">
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="5-online-inference-and-ranking">5. Online Inference and Ranking<a href="https://docs.uopensail.com/blog/AppS/MMOE#5-online-inference-and-ranking" class="hash-link" aria-label="5. Online Inference and Ranking的直接链接" title="5. Online Inference and Ranking的直接链接">​</a></h4>
<p>During online inference, we apply the same weights to PCTR and PCVR and rank them based on the weighted scores. Through this strategy, we can balance the priorities of clicks and downloads in recommendation ranking, optimizing user experience and business metrics.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ab-testing-results">AB Testing Results<a href="https://docs.uopensail.com/blog/AppS/MMOE#ab-testing-results" class="hash-link" aria-label="AB Testing Results的直接链接" title="AB Testing Results的直接链接">​</a></h3>
<p>By applying the MMOE model in the "Guess You Like" module, our AB testing results showed a <strong>13.1%</strong> increase in average distribution per user. This significant improvement validates the effectiveness of the MMOE model in simultaneously optimizing CTR and CVR, bringing higher user engagement and conversion rates to the AppS business.</p>
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/MMOE-AB.png" alt="" width="522" data-align="center" class="img_ev3q">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://docs.uopensail.com/blog/AppS/MMOE#conclusion" class="hash-link" aria-label="Conclusion的直接链接" title="Conclusion的直接链接">​</a></h3>
<p>The MMOE model achieves comprehensive optimization of CTR and CVR in the AppS business through its flexible expert and gating mechanisms. Combined with the FM cross strategy, MMOE not only enhances the predictive ability of recommendation systems but also improves multi-objective synergy optimization of user behavior, providing strong support for business development.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="further-reading">Further Reading<a href="https://docs.uopensail.com/blog/AppS/MMOE#further-reading" class="hash-link" aria-label="Further Reading的直接链接" title="Further Reading的直接链接">​</a></h2>
<ul>
<li>
<p><a href="https://dl.acm.org/doi/pdf/10.1145/3219819.3220007" target="_blank" rel="noopener noreferrer">Modeling Task Relationships in Multi-task Learning with
Multi-gate Mixture-of-Experts</a></p>
</li>
<li>
<p><a href="https://www.yuan-meng.com/posts/mtml/" target="_blank" rel="noopener noreferrer">The Annotated Multi-Task Ranker: An MMoE Code Example</a></p>
</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Applicaton Store(AppS) Introduction]]></title>
            <link>https://docs.uopensail.com/blog/AppS/intro</link>
            <guid>https://docs.uopensail.com/blog/AppS/intro</guid>
            <pubDate>Fri, 21 Mar 2025 13:33:17 GMT</pubDate>
            <description><![CDATA[Apps functions as a digital distribution platform similar to Apple's AppStore or Google Play, focusing on providing users with a variety of applications and games. Our primary key performance indicator is the number of user downloads and installations, which directly reflects the platform's usage and user satisfaction.]]></description>
            <content:encoded><![CDATA[<p>Apps functions as a digital distribution platform similar to Apple's AppStore or Google Play, focusing on providing users with a variety of applications and games. Our primary key performance indicator is the number of user downloads and installations, which directly reflects the platform's usage and user satisfaction.</p>
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/appstore.jpg" alt="" width="476" data-align="center" class="img_ev3q">
<img decoding="async" loading="lazy" title="" src="https://docs.uopensail.com/blog/static/images/googleplay.png" alt="" width="476" data-align="center" class="img_ev3q">
<p><strong>Current Status</strong></p>
<ol>
<li>
<p><strong>Network Adaptability</strong><br>
In situations of no network or weak network, this platform utilizes cached information to ensure that the user interface remains fully populated, avoiding blank screens. This feature enhances user experience under various network conditions.</p>
</li>
<li>
<p><strong>App and Game Distribution</strong><br>
The platform primarily distributes apps and games. With the expertise of our operational staff, these are configured for placement on different leaderboards. However, as these leaderboards are manually operated, the configuration tasks are heavy, with the homepage alone featuring more than 20 leaderboards. This results in longer onboarding cycles, typically requiring two weeks for review. This manual configuration approach leads to slow leaderboard updates and poor performance of new apps during the cold start phase, reducing overall distribution efficiency.</p>
</li>
<li>
<p><strong>Performance of "Guess You Like" Section</strong><br>
The "You May Like" section of the platform is a relatively high-traffic area, accounting for <strong>45%</strong> of the platform's daily active users, yet it only contributes <strong>5%</strong> of the total downloads. Despite the high traffic, the limited exposure slots result in download volumes not matching the expected contribution levels.</p>
</li>
</ol>
<p><strong>Future Goals</strong></p>
<p>To enhance the number of downloads and installations, the platform plans to integrate an advanced recommendation system. Through intelligent recommendations, we aim to effectively expedite leaderboard updates and improve the exposure of new applications, thereby enhancing overall distribution efficiency and optimizing user experience.</p>]]></content:encoded>
        </item>
    </channel>
</rss>